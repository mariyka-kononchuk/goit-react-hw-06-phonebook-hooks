{"version":3,"sources":["components/Filter/Filter.module.css","components/App/App.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","components/Container/Container.js","redux/contacts/contacts-action.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/App/App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css"],"names":["module","exports","Container","children","className","s","container","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","SignupForm","onAddContact","dispatch","useDispatch","useState","setName","setNumber","handleChange","e","target","value","reset","onSubmit","preventDefault","actions","form","label","title","input","type","onChange","pattern","required","button","Filter","useSelector","state","contacts","filter","ContactListItem","item","contact","onClick","ContactList","items","getVisibleContacts","list","map","allContacts","normilizedFilter","toLowerCase","includes","App","titlePhonebbok","titleContacts","createReducer","data","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","rootReducer","contactsReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","querySelector"],"mappings":"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","file":"static/js/main.ca3e1bd3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3st0c\",\"title\":\"Filter_title__-_xp9\",\"input\":\"Filter_input__2IhAf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePhonebbok\":\"App_titlePhonebbok__GhDt6\",\"titleContacts\":\"App_titleContacts__3V7Tl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__30iDu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__32aNL\"};","import React from 'react';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => <div className={s.container}>{children}</div>;\r\n\r\nexport default Container;","//with Redux Toolkit\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addContact = createAction('app/addContact', ({name,number}) => ({\r\n    payload: {\r\n        id: uuidv4(),\r\n        name,\r\n        number\r\n    }   \r\n}))\r\n\r\nexport const deleteContact = createAction('app/deleteContact');\r\nexport const changeFilter = createAction('app/changeFilter');\r\n\r\n    \r\n\r\n\r\n//without Redux Toolkit\r\n// import actionTypes from './contacts-types';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\n// export const addContact = ({name,number}) => ({\r\n//     type: actionTypes.ADD_CONTACT,\r\n//     payload: {\r\n//       id: uuidv4(),\r\n//       name,\r\n//       number\r\n//     }\r\n// });\r\n\r\n// export const deleteContact = contactId => ({\r\n//     type: actionTypes.DELETE_CONTACT,\r\n//     payload: contactId\r\n// });\r\n\r\n// export const changeFilter = value => ({\r\n//     type: actionTypes.CHANGE_FILTER,\r\n//     payload: value\r\n// });\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actions from '../../redux/contacts/contacts-action'\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function SignupForm({ onAddContact }) {\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    \r\n    const handleChange = e => {\r\n        const {name, value} = e.target\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n     const handleSubmit = e => {\r\n         e.preventDefault();\r\n         dispatch(actions.addContact({name, number}))\r\n       // onAddContact({ name, number });\r\n        reset();\r\n    }\r\n\r\n    const reset = () => {\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n    return (\r\n        <form  onSubmit={handleSubmit} className={s.form}>\r\n                <label className={s.label}>\r\n                    <span className={s.title}>Name</span>\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={handleChange}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <label className={s.label}>\r\n                    <span className={s.title}>Number</span>\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        onChange={handleChange}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <button className={s.button} type=\"submit\">Add contact</button>\r\n            </form>\r\n\r\n    )\r\n}\r\n// const mapStateToProps = state => {\r\n//     return {\r\n//         contacts: state.contacts.items\r\n//     }\r\n// }\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n   \r\n//   return {\r\n//     onAddContact: ({name, number}) => dispatch(actions.addContact({name, number})),\r\n//   }\r\n// }\r\n\r\nSignupForm.propTypes = {\r\n    onAddContact: PropTypes.func,\r\n};","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from '../../redux/contacts/contacts-action'\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter () {\r\n  const value = useSelector(state => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n  const onChange = e => dispatch(actions.changeFilter(e.target.value))\r\n  return(\r\n    <label className={s.label}>\r\n      <span className={s.title}>Find contacts by name</span>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  )\r\n}\r\n\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange:PropTypes.func\r\n};\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//       value: state.contacts.filter\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     onChange: e => dispatch(actions.changeFilter(e.target.value)),\r\n//   }\r\n// }\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actions from '../../redux/contacts/contacts-action'\r\nimport s from './ContactListItem.module.css';\r\n\r\nexport default function ContactListItem({ contacts }) {\r\nconst dispatch = useDispatch();\r\nreturn (\r\n    <div className={s.item}>\r\n        <p className={s.contact}>\r\n            <span className={s.name}>{contacts.name}:\r\n            </span>\r\n            <span className={s.number}>{contacts.number}\r\n            </span>\r\n        </p>\r\n    <button className={s.button} onClick={() => dispatch(actions.deleteContact(contacts.id))}>Delete</button>\r\n    </div> \r\n)\r\n} \r\n\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     onDeleteContact: (contactId) => dispatch(actions.deleteContact(contactId)),\r\n//   }\r\n// }\r\n\r\n//export default connect(null, mapDispatchToProps)(ContactListItem);\r\n\r\nContactListItem.propTypes = {\r\n  contacts: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired\r\n  })\r\n\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport s from './ContactList.module.css';\r\nimport ContactListItem from '../ContactListItem';\r\n\r\nexport default function ContactList  () {\r\nconst contacts = useSelector(({contacts:{items, filter}}) => getVisibleContacts(items, filter))\r\n    return (\r\n        <ul className={s.list}>\r\n            {contacts.map((contacts) => (\r\n                <li key={contacts.id}  >\r\n                    <ContactListItem contacts={contacts} />\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\n const getVisibleContacts = (allContacts, filter) => {\r\n    const normilizedFilter = filter.toLowerCase();\r\n    return allContacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normilizedFilter));\r\n  }\r\n\r\n// const mapStateToProps = ({contacts:{items, filter}}) => {\r\n//     return {\r\n//         contacts: getVisibleContacts(items, filter)\r\n//     }\r\n//   }\r\n\r\n\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string,\r\n        })\r\n    ),\r\n};\r\n\r\n ","import React from 'react';\nimport s from './App.module.css';\nimport Container from '../Container';\nimport ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\n\nexport default function App () {\n    return (\n      <Container>\n        <div>\n          <h1 className={s.titlePhonebbok}>Phonebook</h1>\n          <ContactForm />\n          <h2 className={s.titleContacts}>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </div>\n      </Container>\n    );\n  \n}\n\n\n","//with Redux Toolkit\r\nimport { combineReducers } from 'redux';\r\nimport {createReducer} from '@reduxjs/toolkit'\r\nimport data from '../../../src/data/contacts.json';\r\nimport {addContact, deleteContact, changeFilter} from './contacts-action'\r\n\r\nconst items = createReducer(data, {\r\n    [addContact]: (state, {payload}) => [payload, ...state],\r\n    [deleteContact]: (state, {payload}) =>\r\n        state.filter(({id}) => id !== payload)\r\n})\r\n\r\nconst filter = createReducer('', {\r\n   [changeFilter]:(_, {payload}) => payload, \r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n});\r\n\r\n\r\n//without Redux Toolkit\r\n// import { combineReducers } from 'redux';\r\n// import data from '../../../src/data/contacts.json';\r\n// import types from './contacts-types'\r\n\r\n// const items = (state = data, {type, payload}) => {\r\n//     switch (type) {\r\n//         case types.ADD_CONTACT:\r\n//             return [payload, ...state];\r\n//         case types.DELETE_CONTACT:\r\n//             return state.filter(({id}) => id !== payload)\r\n            \r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n// const filter = (state = '', {type, payload}) => {\r\n//      switch (type) {\r\n//         case types.CHANGE_FILTER:\r\n//             return payload;  \r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n// export default combineReducers({\r\n//     items,\r\n//     filter\r\n// });","//with Redux Toolkit\r\nimport { configureStore, getDefaultMiddleware, combineReducers } from \"@reduxjs/toolkit\";\r\nimport logger from 'redux-logger';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\n//for watching prevState, action, nextState in console\r\nconst middleware = [...getDefaultMiddleware({\r\n    serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n    }\r\n}),\r\n    logger]\r\n\r\n//localStorage\r\nconst persistConfig = {\r\n    key: 'contacts',\r\n    storage\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    contacts: contactsReducer,\r\n})\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer, \r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n})\r\n//обертка над store, которая реализует обновление LocalStorage\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n\r\n//without Redux Toolkit\r\n//import { combineReducers } from \"redux\";\r\n//import { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n// const rootReducer = combineReducers({\r\n//     contacts: contactsReducer\r\n// })\r\n\r\n//const store = createStore(rootReducer, composeWithDevTools());","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n    \n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2nycZ\",\"label\":\"ContactForm_label__3nw23\",\"title\":\"ContactForm_title__b4lKF\",\"input\":\"ContactForm_input__2h0Jl\",\"button\":\"ContactForm_button__3Rtww\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__1HKRa\",\"contact\":\"ContactListItem_contact__2gNrl\",\"name\":\"ContactListItem_name__2hK8b\",\"number\":\"ContactListItem_number__2w2Zs\",\"button\":\"ContactListItem_button__aUTzO\"};"],"sourceRoot":""}